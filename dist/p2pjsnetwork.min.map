{"version":3,"sources":["../node_modules/events/events.js","enums.ts","logger.ts","utils.ts","peer.ts","partialPeer.ts","peerFactory.ts","linkServerService.ts","network.ts","exports.ts"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","module","exports","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","onceWrapper","fired","arguments","removeListener","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","addErrorHandlerIfEventEmitter","handler","flags","on","eventTargetAgnosticAddListener","addEventListener","wrapListener","arg","removeEventListener","defineProperty","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","keys","key","rawListeners","eventNames"],"mappings":"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","file":"p2pjsnetwork.min.map","sourceRoot":"../lib","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","export enum ServerMessageTypes {\n  Link = 'LINK',\n  Offer = 'OFFER',\n  Answer = 'ANSWER',\n  Candidate = 'CANDIDATE',\n  Complete = 'COMPLETE',\n  EmptyServerError = 'EMPTY_SERVER_ERROR',\n  WrongOrExpiredLinkError = 'WRONG_OR_EXPIRED_LINK_ERROR',\n  WrongMessageFormatError = 'WRONG_MESSAGE_FORMAT_ERROR',\n  WrongMessageTypeError = 'WRONG_MESSAGE_TYPE_ERROR',\n  LinkAmountTooHighError = 'LINK_AMOUNT_TOO_HIGH_ERROR',\n  MaxLinkAmountExceededError = 'MAX_LINK_AMOUNT_EXCEEDED_ERROR'\n};\n\nexport enum NetworkMessageTypes {\n  Broadcast = 'BROADCAST'\n}","const LOG_PREFIX = 'P2PJSNetwork: ';\n\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private crrLogLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this.crrLogLevel; }\n\n    set logLevel(logLevel: LogLevel) { this.crrLogLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this.crrLogLevel >= LogLevel.All) {\n            this.print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this.crrLogLevel >= LogLevel.Warnings) {\n            this.print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this.crrLogLevel >= LogLevel.Errors) {\n            this.print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this.print = fn;\n    }\n\n    private print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();","export const randomId = (len: number) => {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  return [...Array(len)].map(() => characters.charAt(Math.floor(Math.random() * characters.length))).join('');\n};","import Logger from \"./logger\";\nimport { EventEmitter } from \"events\";\nimport { IMessage } from \"./linkServerService\";\nimport { randomId } from \"./utils\";\n\nexport interface PeerConfiguration {\n  rtcConfiguration?: RTCConfiguration,\n  messageIdLength: number\n}\n\nexport interface IPeerMessage<TypeType = string, PayloadType = any>\n  extends IMessage<TypeType, PayloadType> {\n  id: string\n}\n\ninterface Peer {\n  on<TypeType = string, PayloadType = any>(event: 'message', cb: (message: IPeerMessage<TypeType, PayloadType>, peer: Peer) => void): this;\n  on(event: 'close', cb: (peer: Peer) => void): this;\n}\n\nclass Peer extends EventEmitter {\n  private readonly peerConfiguration: PeerConfiguration;\n  private readonly peerConnection: RTCPeerConnection;\n  private readonly receiverSocket: RTCDataChannel;\n  private readonly transmitterSocket: RTCDataChannel;\n\n  constructor(peerConnection: RTCPeerConnection,\n              receiverSocket: RTCDataChannel,\n              transmitterSocket: RTCDataChannel,\n              peerConfiguration?: PeerConfiguration) {\n    super();\n    this.peerConnection = peerConnection;\n    this.receiverSocket = receiverSocket;\n    this.transmitterSocket = transmitterSocket;\n    this.peerConfiguration = {\n      messageIdLength: 8,\n      ...peerConfiguration\n    };\n\n    this.peerConnection.addEventListener(\"connectionstatechange\", this.connectionStateHandler.bind(this));\n    this.receiverSocket.onmessage = (event) => this.emit('message', JSON.parse(event.data), this);\n  }\n\n  private connectionStateHandler() {\n    switch (this.peerConnection.iceConnectionState) {\n      case \"failed\":\n      case \"closed\":\n      case \"disconnected\":\n        Logger.warn(\"Peer dsiconnected\");\n        this.peerConnection.close();\n        this.emit('close', this);\n        break;\n      case \"completed\":\n        Logger.log(\"Connection completed\");\n        break;\n    }\n  }\n\n  send(type: string, payload: any) {\n    this.transmitterSocket.send(JSON.stringify({ type, payload, id: randomId(this.peerConfiguration?.messageIdLength) }));\n  }\n}\n\nexport default Peer;","import Peer, { PeerConfiguration } from \"./peer\";\nimport { EventEmitter } from \"events\";\n\nexport default class PartialPeer extends EventEmitter {\n  private readonly peerConnection: RTCPeerConnection;\n  private readonly receiverSocket: RTCDataChannel;\n\n  constructor(peerConfiguration?: PeerConfiguration, dataChannelInit?: RTCDataChannelInit) {\n    super();\n    this.peerConnection = new RTCPeerConnection(peerConfiguration?.rtcConfiguration);\n    this.receiverSocket = this.peerConnection.createDataChannel('receiver', dataChannelInit);\n    \n    this.peerConnection.addEventListener('datachannel', this.onCompleteConnection.bind(this));\n    this.peerConnection.addEventListener('icecandidate', this.onIceCandidate.bind(this));\n  }\n\n  async createOffer(): Promise<RTCSessionDescriptionInit> {\n    const offer = await this.peerConnection.createOffer();\n    await this.peerConnection.setLocalDescription(offer);\n    return offer;\n  }\n\n  async recceiveOffer(offer: RTCSessionDescriptionInit): Promise<RTCSessionDescriptionInit> {\n    await this.peerConnection.setRemoteDescription(offer);\n    const answer = await this.peerConnection.createAnswer();\n    await this.peerConnection.setLocalDescription(answer);\n    return answer;\n  }\n\n  async recceiveAnswer(answer: RTCSessionDescriptionInit): Promise<void> {\n    await this.peerConnection.setRemoteDescription(answer);\n  }\n\n  async addCandidate(candidate: RTCIceCandidateInit | RTCIceCandidate): Promise<void> {\n    await this.peerConnection.addIceCandidate(candidate);\n  }\n\n  private onIceCandidate(event: RTCPeerConnectionIceEvent) {\n    this.emit('icecandidate', event.candidate);\n  }\n\n  private onCompleteConnection(event: RTCDataChannelEvent) {\n    this.peerConnection.removeEventListener('datachannel', this.onCompleteConnection.bind(this));\n    this.peerConnection.removeEventListener('icecandidate', this.onIceCandidate.bind(this));\n    this.emit('completeConnection', new Peer(this.peerConnection,\n      this.receiverSocket, event.channel));\n  }\n}","import Peer, { PeerConfiguration } from \"./peer\";\nimport Logger from \"./logger\";\nimport { EventEmitter } from \"events\";\nimport PartialPeer from \"./partialPeer\";\nimport { AnswerPayload, CandidatePayload, OfferPayload } from \"./payloads\";\nimport IDictionary from \"./dictionary\";\n\ninterface PeerFactory {\n  on(event: 'icecandidate', listener: (linkId: string, candidate: RTCIceCandidate) => void): this;\n  on(event: 'connection', listener: (linkId: string, peer: Peer) => void): this;\n};\n\nclass PeerFactory extends EventEmitter {\n  private readonly peerConfiguration?: PeerConfiguration;\n  private readonly partialPeerPool: IDictionary<PartialPeer> = { };\n  \n  \n  constructor(peerConfiguration?: PeerConfiguration) {\n    super();\n    this.peerConfiguration = peerConfiguration;\n  }\n\n  async createOffer(linkId: string) {\n    const newPartialPeer = new PartialPeer(this.peerConfiguration);\n    this.onEvents(newPartialPeer, linkId);\n    this.partialPeerPool[linkId] = newPartialPeer;\n    return await newPartialPeer.createOffer();\n  }\n\n  async recceiveOffer(payload: OfferPayload): Promise<RTCSessionDescriptionInit> {\n    const newPartialPeer = new PartialPeer(this.peerConfiguration);\n    this.onEvents(newPartialPeer, payload.linkId);\n    this.partialPeerPool[payload.linkId] = newPartialPeer;\n    return await newPartialPeer.recceiveOffer(payload.offer);\n  }\n\n  async receiveAnswer(payload: AnswerPayload): Promise<void> {\n    if (payload.linkId in this.partialPeerPool) {\n      const partialPeer = this.partialPeerPool[payload.linkId]!;\n      await partialPeer.recceiveAnswer(payload.answer);\n    } else {\n      Logger.error('Answer recceived in unknown link id');\n    }\n  }\n\n  async recceiveCandidate(payload: CandidatePayload): Promise<void> {\n    if (payload.linkId in this.partialPeerPool) {\n      const partialPeer = this.partialPeerPool[payload.linkId]!;\n      await partialPeer.addCandidate(payload.candidate);\n    } else {\n      Logger.error('Candidate recceived in unknown link id');\n    }\n  }\n\n  private onEvents(newPartialPeer: PartialPeer, linkId: string) {\n    newPartialPeer.on('icecandidate', (candidate: RTCIceCandidate) => {\n      this.emit('icecandidate', linkId, candidate);\n    });\n    newPartialPeer.on('completeConnection', (peer: Peer) => {\n      newPartialPeer.removeAllListeners();\n      delete this.partialPeerPool[linkId];\n      this.emit('connection', linkId, peer);\n    });\n  }\n}\n\nexport default PeerFactory;","import Peer, { PeerConfiguration } from \"./peer\";\nimport Logger from \"./logger\";\nimport PeerFactory from \"./peerFactory\";\nimport { ServerMessageTypes } from \"./enums\";\nimport { EventEmitter } from \"events\";\n\nexport interface LinkServerServiceConfig {\n  path: string,\n  port: number,\n  secure: boolean,\n  params?: [\n    param: string,\n    value: string\n  ][]\n}\n\nexport interface IMessage<TypeType = string, PayloadType = any> {\n  type: TypeType;\n  payload: PayloadType;\n}\n\ninterface LinkServerService {\n  on(event: 'connection', listener: (linkid: string, peer: Peer) => void): this;\n  on(event: 'open', listener: () => void): this;\n  on(event: 'emptylinkserver', listener: () => void): this;\n  on(event: 'configurationError', listener: (message: IMessage<ServerMessageTypes>) => void): this;\n  on(event: 'communicationError', listener: (message: IMessage<ServerMessageTypes>) => void): this;\n}\n\nclass LinkServerService extends EventEmitter {\n  private readonly webSocket: WebSocket;\n  private readonly peerFactory: PeerFactory;\n\n  constructor(linkServerConfig: LinkServerServiceConfig,\n    peerConfiguration?: PeerConfiguration) {\n    super();\n    const protocol = linkServerConfig.secure ? 'wss://' : 'ws://';\n    const urlParams = linkServerConfig.params?.map(([param, value]) => `${param}=${value}`).join('&') ?? '';\n    const url = `${protocol}${linkServerConfig.path}:${linkServerConfig.port}?${urlParams}`;\n    Logger.log('Opening link server socket.')\n    this.webSocket = new WebSocket(url);\n\n    this.webSocket.onopen = this.onConnectionOpen.bind(this);\n    this.webSocket.onclose = this.onConnectionClose.bind(this);\n    this.webSocket.onmessage = (event: MessageEvent<any>) => {\n      this.handleMessage(JSON.parse(event.data));\n    };\n\n    this.peerFactory = new PeerFactory(peerConfiguration);\n    this.peerFactory.on('icecandidate', this.onPeerIceCandidate.bind(this));\n    this.peerFactory.on('connection', this.onPeerConnection.bind(this));\n  }\n\n  searchPeers(amount: number) {\n    Logger.log('Starting peer search.');\n    this.send(ServerMessageTypes.Link, {\n      amount\n    });\n  }\n\n  private onPeerConnection(linkId: string, peer: Peer) {\n    this.send(ServerMessageTypes.Complete, { linkId });\n    this.emit('connection', linkId, peer);\n  }\n\n  private onPeerIceCandidate(linkId: string, candidate: RTCIceCandidate) {\n    Logger.log('Peer candidate recceived.');\n    this.send(ServerMessageTypes.Candidate, { linkId, candidate });\n  }\n\n  private onConnectionOpen() {\n    Logger.log('Link server socket opened.');\n    this.emit('open');\n  }\n\n  private onConnectionClose() {\n    Logger.log('Link server socket closed.');\n  }\n\n  private send(type: ServerMessageTypes, payload: any) {\n    this.webSocket.send(JSON.stringify({ type, payload }));\n  }\n\n  private handleMessage(message: IMessage<ServerMessageTypes>) {\n    switch (message.type) {\n      case ServerMessageTypes.Link:\n        const linkList: string[] = message.payload.links;\n        Logger.log(`${linkList.length} links found`);\n        Logger.log('Starting connections...');\n        linkList.forEach(linkId => {\n          this.peerFactory.createOffer(linkId).then(offer => {\n            this.send(ServerMessageTypes.Offer, {\n              linkId,\n              offer\n            });\n          });         \n        });\n        break;\n      \n      case ServerMessageTypes.Offer:\n        Logger.log('Offer recceived.');\n        this.peerFactory\n          .recceiveOffer(message.payload)\n          .then(answer => {\n            this.send(ServerMessageTypes.Answer, {\n              answer, linkId: message.payload.linkId\n            });\n        });\n        break;\n      \n      case ServerMessageTypes.Answer:\n        this.peerFactory\n          .receiveAnswer(message.payload);\n        break;\n      \n      case ServerMessageTypes.Candidate:\n        this.peerFactory.recceiveCandidate(message.payload);\n        break;\n      \n      case ServerMessageTypes.EmptyServerError:\n        Logger.warn(message.payload.message);\n        this.emit('emptylinkserver');\n        break;\n      \n      case ServerMessageTypes.LinkAmountTooHighError:\n      case ServerMessageTypes.MaxLinkAmountExceededError:\n        Logger.error(message.payload.message);\n        this.emit('configurationError', message);\n        break;\n      \n      case ServerMessageTypes.WrongMessageTypeError:\n      case ServerMessageTypes.WrongOrExpiredLinkError:\n      case ServerMessageTypes.WrongMessageFormatError:\n        Logger.error(message.payload.message);\n        this.emit('communicationError', message);\n        break;\n    }\n  }\n}\n\nexport default LinkServerService;","import { EventEmitter } from \"events\";\nimport { IMessage } from \"..\";\nimport IDictionary from \"./dictionary\";\nimport { NetworkMessageTypes } from \"./enums\";\nimport LinkServerService, { LinkServerServiceConfig } from \"./linkServerService\";\nimport Logger, { LogLevel } from \"./logger\";\nimport Peer, { IPeerMessage } from \"./peer\";\n\nexport interface NetworkConfig {\n  linkServerConfig?: LinkServerServiceConfig\n  logLevel?: LogLevel,\n  startPeersCount?: number\n}\n\ninterface Network {\n  on(event: 'connection', listener: (peerId: string, peer: Peer) => void): this;\n  on(event: 'message', listener: (message: IMessage | any) => void): this;\n  on(event: 'close', listener: (peerId: string, peer: Peer) => void): this;\n};\n\nclass Network extends EventEmitter {\n  private readonly startPeersCount: number;\n  private readonly peers: IDictionary<Peer> = {}\n  private linkServer: LinkServerService;\n  private messageIdList: string[] = [];\n\n  get availablePeers() : ReadonlyArray<Peer> {\n    return Object.values(this.peers);\n  } \n\n  constructor(networkConfig?: NetworkConfig) {\n    super();\n    const config = {\n      linkServerConfig: {\n        path: 'localhost',\n        secure: false,\n        port: 7070\n      },\n      logLevel: LogLevel.Disabled,\n      startPeersCount: 3,\n      ...networkConfig\n    };\n\n    Logger.logLevel = config.logLevel;\n    this.startPeersCount = config.startPeersCount;\n    this.linkServer = new LinkServerService(config.linkServerConfig);\n    this.linkServer.on('open', this.start.bind(this));\n    this.linkServer.on('connection', this.connectionReceived.bind(this))\n  }\n\n  private start() {\n    this.linkServer.searchPeers(this.startPeersCount);\n  }\n\n  private connectionReceived(peerId: string, peer: Peer) {\n    this.peers[peerId] = peer;\n    Logger.log(`Peer connected - ${this.peers.length}`);\n    this.emit('connection', peer);\n    peer.on('message', this.handleMessage.bind(this));\n    peer.on('close', peer => this.connectionClosed(peerId, peer));\n  }\n\n  private connectionClosed(peerId: string, peer: Peer) {\n    delete this.peers[peerId];\n    Logger.log(`${Object.keys(this.peers).length} peers connected`);\n    this.emit('close', peerId, peer);\n  }\n\n  private handleMessage(message: IPeerMessage<NetworkMessageTypes>) {\n    switch (message.type) {\n      case NetworkMessageTypes.Broadcast: {\n\n      }\n        break;\n      default:\n        this.emit('message', message);\n        break;\n    }\n  }\n\n  broadcast(payload: IMessage) {\n    Object.entries(this.peers).forEach(([key, value]) => {\n      value.send(NetworkMessageTypes.Broadcast, payload);\n    });\n  }\n}\n\nexport default Network;","import Network from \"./network\";\nimport { LogLevel } from \"./logger\";\n\nexport const p2pjsnetwork = {\n  Network,\n  LogLevel\n};\n\nexport { LogLevel } from \"./logger\";\nexport default Network;\n\n(<any>window).p2pjsnetwork = p2pjsnetwork;"]}